// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/SceneCaptureCubeHDRRenderPluginPrivatePCH.h"
#include "SceneCaptureCubeHDRRenderPlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1SceneCaptureCubeHDRRenderPlugin() {}
	void USceneCaptureCubeHDRRenderPluginBPLibrary::StaticRegisterNativesUSceneCaptureCubeHDRRenderPluginBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureCubeHDRRenderPluginBPLibrary::StaticClass(), "ExportRenderTargetCube",(Native)&USceneCaptureCubeHDRRenderPluginBPLibrary::execExportRenderTargetCube);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureCubeHDRRenderPluginBPLibrary::StaticClass(), "SceneCaptureCubeHDRRenderPluginSampleFunction",(Native)&USceneCaptureCubeHDRRenderPluginBPLibrary::execSceneCaptureCubeHDRRenderPluginSampleFunction);
	}
	IMPLEMENT_CLASS(USceneCaptureCubeHDRRenderPluginBPLibrary, 1666030330);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTargetCube_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	SCENECAPTURECUBEHDRRENDERPLUGIN_API class UFunction* Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_ExportRenderTargetCube();
	SCENECAPTURECUBEHDRRENDERPLUGIN_API class UFunction* Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_SceneCaptureCubeHDRRenderPluginSampleFunction();
	SCENECAPTURECUBEHDRRENDERPLUGIN_API class UClass* Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary_NoRegister();
	SCENECAPTURECUBEHDRRENDERPLUGIN_API class UClass* Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary();
	SCENECAPTURECUBEHDRRENDERPLUGIN_API class UPackage* Z_Construct_UPackage__Script_SceneCaptureCubeHDRRenderPlugin();
	UFunction* Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_ExportRenderTargetCube()
	{
		struct SceneCaptureCubeHDRRenderPluginBPLibrary_eventExportRenderTargetCube_Parms
		{
			UObject* WorldContextObject;
			UTextureRenderTargetCube* TextureRenderTarget;
			FString FilePath;
			FString FileName;
		};
		UObject* Outer=Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ExportRenderTargetCube"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SceneCaptureCubeHDRRenderPluginBPLibrary_eventExportRenderTargetCube_Parms));
			UProperty* NewProp_FileName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FileName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FileName, SceneCaptureCubeHDRRenderPluginBPLibrary_eventExportRenderTargetCube_Parms), 0x0010000000000080);
			UProperty* NewProp_FilePath = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FilePath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FilePath, SceneCaptureCubeHDRRenderPluginBPLibrary_eventExportRenderTargetCube_Parms), 0x0010000000000080);
			UProperty* NewProp_TextureRenderTarget = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TextureRenderTarget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TextureRenderTarget, SceneCaptureCubeHDRRenderPluginBPLibrary_eventExportRenderTargetCube_Parms), 0x0010000000000080, Z_Construct_UClass_UTextureRenderTargetCube_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, SceneCaptureCubeHDRRenderPluginBPLibrary_eventExportRenderTargetCube_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("RenderingPlugin"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("ExportRenderTargetCube"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SceneCaptureCubeHDRRenderPluginBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
			MetaData->SetValue(NewProp_FileName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_FilePath, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_SceneCaptureCubeHDRRenderPluginSampleFunction()
	{
		struct SceneCaptureCubeHDRRenderPluginBPLibrary_eventSceneCaptureCubeHDRRenderPluginSampleFunction_Parms
		{
			float Param;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SceneCaptureCubeHDRRenderPluginSampleFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SceneCaptureCubeHDRRenderPluginBPLibrary_eventSceneCaptureCubeHDRRenderPluginSampleFunction_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SceneCaptureCubeHDRRenderPluginBPLibrary_eventSceneCaptureCubeHDRRenderPluginSampleFunction_Parms), 0x0010000000000580);
			UProperty* NewProp_Param = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Param"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Param, SceneCaptureCubeHDRRenderPluginBPLibrary_eventSceneCaptureCubeHDRRenderPluginSampleFunction_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SceneCaptureCubeHDRRenderPluginTesting"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Execute Sample function"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("SceneCaptureCubeHDRRenderPlugin sample test testing"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SceneCaptureCubeHDRRenderPluginBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary_NoRegister()
	{
		return USceneCaptureCubeHDRRenderPluginBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_SceneCaptureCubeHDRRenderPlugin();
			OuterClass = USceneCaptureCubeHDRRenderPluginBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_ExportRenderTargetCube());
				OuterClass->LinkChild(Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_SceneCaptureCubeHDRRenderPluginSampleFunction());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_ExportRenderTargetCube(), "ExportRenderTargetCube"); // 523416374
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USceneCaptureCubeHDRRenderPluginBPLibrary_SceneCaptureCubeHDRRenderPluginSampleFunction(), "SceneCaptureCubeHDRRenderPluginSampleFunction"); // 1812692562
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SceneCaptureCubeHDRRenderPluginBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SceneCaptureCubeHDRRenderPluginBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("*      Function library class.\n*      Each function in it is expected to be static and represents blueprint node that can be called in any blueprint.\n*\n*      When declaring function you can define metadata for the node. Key function specifiers will be BlueprintPure and BlueprintCallable.\n*      BlueprintPure - means the function does not affect the owning object in any way and thus creates a node without Exec pins.\n*      BlueprintCallable - makes a function which can be executed in Blueprints - Thus it has Exec pins.\n*      DisplayName - full name of the node, shown when you mouse over the node and in the blueprint drop down menu.\n*                              Its lets you name the node using characters not allowed in C++ function names.\n*      CompactNodeTitle - the word(s) that appear on the node.\n*      Keywords -      the list of keywords that helps you to find node when you search for it using Blueprint drop-down menu.\n*                              Good example is \"Print String\" node which you can find also by using keyword \"log\".\n*      Category -      the category your node will be under in the Blueprint drop-down menu.\n*\n*      For more info on custom blueprint nodes visit documentation:\n*      https://wiki.unrealengine.com/Custom_Blueprint_Node_Creation"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary(Z_Construct_UClass_USceneCaptureCubeHDRRenderPluginBPLibrary, &USceneCaptureCubeHDRRenderPluginBPLibrary::StaticClass, TEXT("USceneCaptureCubeHDRRenderPluginBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USceneCaptureCubeHDRRenderPluginBPLibrary);
	UPackage* Z_Construct_UPackage__Script_SceneCaptureCubeHDRRenderPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/SceneCaptureCubeHDRRenderPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000080);
			FGuid Guid;
			Guid.A = 0xD6B85E64;
			Guid.B = 0x66858C20;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
